apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        config {
            def keystorePropertiesFilePath = "${keystore_properties_path}"
            def keystorePropertiesFile = rootProject.file(keystorePropertiesFilePath)
            def keystoreProperties = new Properties()
            if (keystorePropertiesFile.exists()) {
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "sk.kasper.space"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 18
        versionName "1.2.5"
        testInstrumentationRunner "sk.kasper.space.MockAndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField 'long', 'SYNC_INTERVAL_HOURS', '4'
        buildConfigField 'long', 'TOO_OLD_LAUNCH_TO_BE_SHOWN_HOURS', '24'
        buildConfigField 'String', 'API_KEY', "\"$api_key\""
        buildConfigField 'boolean', 'USE_FAKE_RESPONSE_API', "$use_fake_fake_reponse_api"
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            manifestPlaceholders += [
                    fabric_key     : "$fabric_key",
                    google_maps_key: "$google_maps_key_release",
            ]
        }
        debug {
            manifestPlaceholders += [
                    fabric_key     : "$fabric_key",
                    google_maps_key: "$google_maps_key_debug",
            ]
        }
    }
    dataBinding {
        enabled = true
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        jumboMode = true
    }
    testOptions {
        unitTests.returnDefaultValues = true

        // Always show the result of every unit test, even if it passes.
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }

        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'com.google.android.material:material:1.1.0-alpha06'
    implementation 'androidx.preference:preference:1.1.0-alpha05'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation "com.google.android.gms:play-services-maps:16.1.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0-alpha01'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha01'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-alpha01"
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0-alpha01'
    implementation 'androidx.room:room-runtime:2.1.0-beta01'
    kapt 'androidx.room:room-compiler:2.1.0-beta01'
    implementation "androidx.room:room-ktx:2.1.0-beta01"
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'

    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.4.0'
    kapt 'com.squareup.inject:assisted-inject-processor-dagger2:0.4.0'

    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabp"
    testImplementation "org.threeten:threetenbp:$threetenabp"
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.6@aar') {
        transitive = true
    }
    implementation "com.google.firebase:firebase-core:16.0.8"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"

    implementation "com.google.firebase:firebase-core:16.0.8"

    testImplementation('androidx.arch.core:core-testing:2.0.0', {})
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestUtil 'androidx.test:orchestrator:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation "androidx.test.ext:junit:1.1.0"
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1-alpha01', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation project(':domain')
}

apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
