apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        config {
            final def keystoreFile = file(System.getenv("SPACE_APP_KEYSTORE_PATH"))
            if (keystoreFile.exists()) {
                storeFile keystoreFile
                storePassword System.getenv("SPACE_APP_KEYSTORE_PASSWORD")
                keyAlias "StarlinerKey"
                keyPassword System.getenv("SPACE_APP_KEY_PASSWORD")
            } else {
                println "couldn't find keystore file: " + keystoreFile.path
            }
        }
    }
    compileSdkVersion 30
    buildToolsVersion '30.0.2'
    defaultConfig {
        applicationId "sk.kasper.space"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 18
        versionName "1.2.5"
        testInstrumentationRunner "sk.kasper.space.MockAndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField 'long', 'SYNC_INTERVAL_HOURS', '4'
        buildConfigField 'long', 'TOO_OLD_LAUNCH_TO_BE_SHOWN_HOURS', '24'
        buildConfigField 'String', 'API_KEY', "\"${System.getenv("SPACE_APP_API_KEY")}\""
        buildConfigField 'boolean', 'USE_FAKE_RESPONSE_API', "$use_fake_reponse_api"

        manifestPlaceholders += [
                fabric_key     : "${System.getenv("SPACE_APP_FABRIC_KEY")}",
                google_maps_key: "${System.getenv("SPACE_APP_GOOGLE_MAPS_KEY")}",
        ]
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    buildFeatures {
        dataBinding = true
        compose true
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        useIR = true
    }
    dexOptions {
        jumboMode = true
    }
    composeOptions {
        kotlinCompilerVersion '1.4.10'
        kotlinCompilerExtensionVersion '1.0.0-alpha06'
    }
    testOptions {
        unitTests.returnDefaultValues = true

        // Always show the result of every unit test, even if it passes.
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }

        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

androidExtensions {
    features = ["parcelize"]
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "com.google.android.gms:play-services-maps:17.0.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    implementation 'androidx.room:room-runtime:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'
    implementation "androidx.room:room-ktx:2.2.5"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'org.ocpsoft.prettytime:prettytime:4.0.4.Final'

    implementation 'androidx.compose.ui:ui:1.0.0-alpha06'
    // Tooling support (Previews, etc.)
    implementation 'androidx.ui:ui-tooling:1.0.0-alpha06'
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation 'androidx.compose.foundation:foundation:1.0.0-alpha06'
    // Material Design
    implementation 'androidx.compose.material:material:1.0.0-alpha06'
    // Material design icons
    implementation 'androidx.compose.material:material-icons-core:1.0.0-alpha06'
    implementation 'androidx.compose.material:material-icons-extended:1.0.0-alpha06'
    // Integration with observables
    implementation 'androidx.compose.runtime:runtime-livedata:1.0.0-alpha06'
    implementation 'androidx.compose.runtime:runtime-rxjava2:1.0.0-alpha06'

    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navVersion"
    implementation 'com.google.android:flexbox:1.1.0'
    implementation "androidx.work:work-runtime-ktx:2.4.0"

    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.5.2'
    kapt 'com.squareup.inject:assisted-inject-processor-dagger2:0.5.2'

    implementation "com.squareup.retrofit2:retrofit:2.6.0"
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.0.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabp"
    testImplementation "org.threeten:threetenbp:$threetenabp"
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'

    implementation "com.google.firebase:firebase-core:18.0.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"

    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestUtil 'androidx.test:orchestrator:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1-alpha01', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation project(':domain')
}

apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
