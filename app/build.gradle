plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.firebase.crashlytics'
    id 'com.google.gms.google-services'
}

android {
    signingConfigs {
        config {
            final def keystoreFile = file(System.getenv("SPACE_APP_KEYSTORE_PATH"))
            if (keystoreFile.exists()) {
                storeFile keystoreFile
                storePassword System.getenv("SPACE_APP_KEYSTORE_PASSWORD")
                keyAlias "StarlinerKey"
                keyPassword System.getenv("SPACE_APP_KEY_PASSWORD")
            } else {
                println "couldn't find keystore file: " + keystoreFile.path
            }
        }
    }
    compileSdkVersion buildConfig.compileSdk
    defaultConfig {
        applicationId "sk.kasper.space"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode 18
        versionName "1.2.5"
        testInstrumentationRunner "sk.kasper.space.MockAndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField 'long', 'SYNC_INTERVAL_HOURS', '4'
        buildConfigField 'long', 'TOO_OLD_LAUNCH_TO_BE_SHOWN_HOURS', '24'
        buildConfigField 'String', 'API_KEY', "\"${System.getenv("SPACE_APP_API_KEY")}\""
        buildConfigField 'boolean', 'USE_FAKE_RESPONSE_API', "$use_fake_reponse_api"

        manifestPlaceholders += [
                google_maps_key: "${System.getenv("SPACE_APP_GOOGLE_MAPS_KEY")}",
        ]
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            manifestPlaceholders += [usesCleartextTraffic: "false"]
        }
        debug {
            manifestPlaceholders += [usesCleartextTraffic: "true"]
        }
    }
    buildFeatures {
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        useIR = true
    }
    testOptions {
        unitTests.returnDefaultValues = true

        // Always show the result of every unit test, even if it passes.
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }

        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

androidExtensions {
    features = ["parcelize"]
}

dependencies {
    implementation project(':domain')
    implementation project(':ui-common')
    implementation project(':ui-settings')
    implementation project(':ui-timeline')
    implementation project(':ui-playground')
    implementation project(':ui-launch')

    implementation libs.android.flexbox
    implementation libs.android.material

    implementation libs.androidx.appcompat
    implementation libs.androidx.core

    implementation libs.androidx.constraintlayout
    implementation libs.androidx.drawerlayout
    implementation libs.androidx.vectordrawable

    implementation libs.androidx.lifecycle.common.java8

    implementation libs.androidx.room.ktx
    implementation libs.androidx.room.runtime
    kapt libs.androidx.room.compiler

    implementation libs.androidx.navigation.fragment
    implementation libs.androidx.navigation.ui

    implementation libs.androidx.work.runtime

    implementation libs.androidx.legacy.support
    implementation libs.androidx.preference

    implementation libs.kotlin.stdlib.jdk7

    implementation libs.google.android.play.services.maps

    implementation libs.dagger.support
    kapt libs.dagger.compiler
    kaptAndroidTest libs.dagger.compiler
    kapt libs.dagger.android.processor
    kaptAndroidTest libs.dagger.android.processor
    compileOnly libs.dagger.assisted.inject.annotations
    kapt libs.dagger.assisted.inject.processor

    implementation libs.retrofit.retrofit
    implementation libs.retrofit.converter.gson
    implementation libs.okhttp.logging
    implementation libs.okhttp.okhttp

    implementation libs.timber

    implementation libs.threetenabp.threetenabp
    testImplementation libs.threetenabp.test

    implementation libs.picasso

    implementation libs.google.firebase.analytics
    implementation libs.google.firebase.crashlytics
    implementation platform(libs.google.firebase.bom)

    implementation libs.kotlin.coroutines.core
    implementation libs.kotlin.coroutines.android
    implementation libs.kotlin.coroutines.test

    androidTestImplementation libs.androidx.test.espresso.contrib
    androidTestImplementation libs.androidx.test.espresso.core
    androidTestImplementation libs.androidx.test.junit
    androidTestImplementation libs.androidx.test.rules
    androidTestImplementation libs.androidx.test.runner
    androidTestUtil libs.androidx.test.orchestrator
    testImplementation libs.androidx.coretesting
    testImplementation libs.junit
    testImplementation libs.mockito.kotlin
}
